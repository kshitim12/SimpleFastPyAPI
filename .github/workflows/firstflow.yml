name: Vulnerability Check

on:
  push:
    branches:
      - '*'

jobs:
  vulnerability-check:
    name: Vulnerability Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python  # Replace with the appropriate language(s) for your project
          queries: ./codeql-queries  # Path to your CodeQL queries

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Check for Vulnerabilities
        run: |
          # Run a command to check for vulnerabilities in the SARIF file generated by CodeQL.
          # Replace this command with your specific vulnerability checking logic.
          # If vulnerabilities are found, set a status or return a non-zero exit code.
          # Example: Fail if a specific keyword is found in the SARIF file
          if [ -e codeql-results/codeql-results.sarif ]; then
            echo "Checking for vulnerabilities..."
            if grep -q 'critical-vulnerability' codeql-results/codeql-results.sarif; then
              echo "Critical vulnerabilities found!"
              exit 1
            fi
          fi
        working-directory: ${{ github.workspace }}

      - name: Set Status Check
        id: set-status
        if: failure()
        run: |
          echo "Vulnerabilities found. Pushes are disabled."
          echo "::set-output name=status::failure"
        working-directory: ${{ github.workspace }}

      - name: Prevent Push
        if: steps.set-status.outputs.status == 'failure'
        run: |
          echo "Vulnerabilities found. Pushes are disabled."
          
          # Use GitHub API to restrict pushes to the branch
          # Example: Use GitHub API to protect the branch (replace 'your-branch-name' with the actual branch name)
          echo "Restricting pushes to the branch..."
          curl -X PUT -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/branches/your-branch-name/protection" -d '{
            "restrictions": null
          }'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ${{ github.workspace }}
